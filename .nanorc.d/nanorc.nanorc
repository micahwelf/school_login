
set autoindent
set boldtext
set brackets ""')>]}"
set mouse
set multibuffer
set nowrap
set punct "!.?"
set quiet
set regexp
set smarthome
set smooth
set softwrap
set tabsize 3
unset tabstospaces
set tempfile
set whitespace ",."




syntax "nanorc" "\.?nanorc$"

## Possible errors and parameters
 icolor brightwhite "^[[:space:]]*((un)?set|include|syntax|i?color).*$"

## Keywords
 icolor brightgreen "^[[:space:]]*(set|unset)[[:space:]]+(allow_insecure_backup|autoindent|backup|backupdir|backwards|boldtext|brackets|casesensitive|const|cut|fill|historylog|matchbrackets|morespace|mouse|multibuffer|noconvert|nofollow|nohelp|nonewlines|nowrap|operatingdir|preserve|punct)\>" "^[[:space:]]*(set|unset)[[:space:]]+(quickblank|quiet|quotestr|rebinddelete|rebindkeypad|regexp|smarthome|smooth|softwrap|speller|suspend|suspendenable|tabsize|tabstospaces|tempfile|undo|view|whitespace|wordbounds)\>"
 icolor green "^[[:space:]]*(set|unset|include|syntax|header)\>"

## Colors
 icolor yellow "^[[:space:]]*i?color[[:space:]]*(bright)?(white|black|red|blue|green|yellow|magenta|cyan)?(,(white|black|red|blue|green|yellow|magenta|cyan))?\>"
 icolor magenta "^[[:space:]]*i?color\>" "\<(start|end)="

## Strings
 icolor white ""(\\.|[^"])*""

## Comments
 icolor brightblue "^[[:space:]]*#.*$"
 icolor cyan "^[[:space:]]*##.*$"

## Brackets and regex character literals
 color brightblue "[{}()]"
 color yellow "\\.|\[(\[\:[a-z_-]+\:\]|\[\..+\.\]|[^][])*\]"


###
## System Files  /etc/fstab
syntax "fstab" "^fstab"
header "^#/etc/fstab|^#.*fstab"

## Comments
 icolor cyan "^[[:space:]]*#.*$"
 color green "[[:space:]]/((dev|mnt|var|boot|(boot/)?(efi|EFI|uefi|UEFI)|usr|linux|srv|run|sys|etc|opt|root|home|proc)(/[a-zA-Z0-9.:_-]+)*)?"
 
## Entries last-field-first
 ## optional dump-num & fsck-order-num
 # color brightblue "([[:space:]]+[0-9])+[[:space:]]*$"
 icolor brightblue "^[[:space:]]*[^[:space:]#]([^[:space:]]|\\ )*[[:space:]]+(none|/([^[:space:]]|\\ )*)[[:space:]]+([a-zA-Z0-9._-])+[[:space:]]+([^[:space:]]|\\ )+([[:space:]]+[0-9])*"
 ## mount options
 color yellow "^[[:space:]]*[^[:space:]#]([^[:space:]]|\\ )*[[:space:]]+(none|/([^[:space:]]|\\ )*)[[:space:]]+([a-zA-Z0-9._-])+[[:space:]]+([^[:space:]]|\\ )+"
 ## filesystem type
 color brightyellow "^[[:space:]]*[^[:space:]#]([^[:space:]]|\\ )*[[:space:]]+(none|/([^[:space:]]|\\ )*)[[:space:]]+([a-zA-Z0-9._-])+"
 ## mount point (path)
 color brightgreen "^[[:space:]]*[^[:space:]#]([^[:space:]]|\\ )*[[:space:]]+(none|/([^[:space:]]|\\ )*)"
 ## mount device/pseudo-name
 color red "(UUID|LABEL|PARTUUID|PARTLABEL)="
 color brightmagenta "^[[:space:]]*[^[:space:]#]([^[:space:]]|\\ )*"
 color brightred "^[[:space:]]*[^[:space:]#/]([^[:space:]=:/])*(=|:)"
 ## keywords/options to be mindful of
 color green "\<(subvol|subvolid|compress|compress-force|x-gvfs-name)=[^[:space:],]+"



###
## GAWK
#
syntax "awk" "\.(awk|gawk)$"
header "^#!/(usr/)?bin/(awk|gawk)([[:space:]][-a-zA-Z]+())*[[:space:]]-E[[:space:]]?$"
## records
 icolor brightred "\$[0-9A-Z_!@#$*?-]+"
## awk-set variables
 color red "\<(ARGC|ARGIND|ARGV|BINMODE|CONVFMT|ENVIRON|ERRNO|FIELDWIDTHS)\>"
 color red "\<(FILENAME|FNR|FPAT|FS|IGNORECASE|LINT|NF|NR|OFMT|OFS|ORS)\>"
 color red "\<(PROCINFO|RS|RT|RSTART|RLENGTH|SUBSEP|TEXTDOMAIN)\>"
## function declarations and special patterns
 color brightgreen "\<(function|extension|BEGIN|END)\>"
## operators
 color green "(\{|\}|\(|\)|\;|\]|\[|\\|<|>|!|=|&|\+|-|\*|%|/|\?:|\^|\|)"
## flow control
 color brightyellow "\<(for|if|while|do|else|in|delete|exit)\>"
 color brightyellow "\<(break|continue|return)\>"
## I/O statements
 color brightgreen "\<(close|getline|next|nextfile|print|printf)\>"
 color brightgreen "\<(system|fflush)\>"
## standard functions
 color magenta "\<[a-zA-Z][a-zA-Z]*\("
 color magenta "\<(atan2|cos|exp|int|log|rand|sin|sqrt|srand)\>"
 color magenta "\<(asort|asorti|gensub|gsub|index|length|match)\>"
 color magenta "\<(split|sprintf|strtonum|sub|substr|tolower|toupper)\>"
 color magenta "\<(mktime|strftime|systime)\>"
 color magenta "\<(and|compl|lshift|or|rshift|xor)\>"
 color magenta "\<(bindtextdomain|dcgettext|dcngettext)\>"

##
## String highlighting.  You will in general want your comments and
## strings to come last, because syntax highlighting rules will be
## applied in the order they are read in.
 color brightyellow "<[^= 	]*>" ""(\\.|[^"])*""

## Comment highlighting
 color brightblue "(^|[[:space:]])#.*$"

## Trailing whitespace
 color ,green "[[:space:]]+$"





###
## Bourne shell scripts
# include "/usr/share/nano/sh.nanorc"
syntax "sh" "\.sh$" "^PKGBUILD$" "\.install$"
header "^#!.*/(ba|k|pdk)?sh[-0-9_]*"
icolor brightgreen "^[[:space:]]*[0-9A-Z_]+\(\)"
color green "\<(case|do|done|elif|else|esac|exit|fi|for|function|if|in|local|read|return|select|shift|then|time|until|while)\>"
color green "(\{|\}|\(|\)|\;|\]|\[|`|\\|\$|<|>|!|=|&|\|)"
color green "\<-[Ldefgruwx]\>"
color green "\<-(eq|ne|gt|lt|ge|le|s|n|z)\>"
color brightblue "\<(cat|cd|chmod|chown|cp|echo|env|export|grep|install|let|ln|make|mkdir|mv|rm|sed|set|tar|touch|umask|unset)\>"
icolor brightred "\$\{?[0-9A-Z_!@#$*?-]+\}?"
color cyan "(^|[[:space:]])#.*$"
color brightyellow ""(\\.|[^"])*"" "'(\\.|[^'])*'"
color ,green "[[:space:]]+$"




###
## ZSH scripts
#
syntax "zsh" "\.zsh$"
header "^#!/(usr/(local/)?|opt/)?bin/r?zsh[-0-9._]*([[:space:]]+-[a-z])*"
#|alias|((\(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)\)[[:space:]]*|\[\[(\[(\[(\[(\[(\[(\[(\[(\[[^][]*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]\][[:space:]]*))
#COMMAND word
color brightblue "((^|[<>$]\(|[;|&])[[:space:]]*|[{][[:space:]]+)(![[:space:]]+)?(([A-Za-z_][A-Za-z_0-9]*(\[(\[(\[(\[(\[([^][]*)\]|[^][]*)\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\])?)\+?=(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|([^][}{();|&[:space:]]*|\"([^"]*|\\.)*\"|'[^']*'|\\.|\$(\{(\{(\{(\{(\{[^{}]*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|([~][=^]?|[=][~^]?|\^[=~]?)?([@*]|[#]|[#]?[a-zA-Z_][a-zA-Z0-9_]*)(\[(\[(\[([^][]*)*\]|[^][]*)*\]|[^][]*)*\])?|([~][=^]?|[=][~^]?|\^[=~]?)?[#]?([0-9]+|[?!$-])))*)?[[:space:]]+)*((builtin|case|command|do|done|elif|else|exec|end|esac|fi|for|(for|foreach)\>([[:space:]]+([A-Za-z_]\>|[A-Za-z_][A-Za-mo-z_0-9]\>|[A-Za-hj-z_][A-Za-z_0-9]\>|[A-Za-z_][A-Za-z_0-9][A-Za-z_0-9]+))+[[:space:]]+(\(([^()]*|\(([^()]*|\(([^()]*)*\))*\))*\))?|function|if|nocorrect|noglob|repeat[[:space:]]+([0-9]+|\$(\{(\{(\{(\{(\{[^{}]*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|([~][=^]?|[=][~^]?|\^[=~]?)?([@*]|[#]|[#]?[a-zA-Z_][a-zA-Z0-9_]*)(\[(\[(\[([^][]*)*\]|[^][]*)*\]|[^][]*)*\])?|([~][=^]?|[=][~^]?|\^[=~]?)?[#]?([0-9]+|[?!$-])))+|select|then|time|until|while|alias([[:space:]]+[-][gs])?|((\(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)\)[[:space:]]*|\[\[(\[(\[(\[(\[(\[(\[(\[(\[[^][]*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]\][[:space:]]*)))[[:space:]]+)*([~./:A-Za-z_+-]+\>|[~./:A-Za-z_+-]*[:.])"
#CONTROL/PRECOMMAND after variable
color green "((^|[<>$]\(|[;|&])[[:space:]]*|[{}][[:space:]]+)(![[:space:]]+)?(([A-Za-z_][A-Za-z_0-9]*(\[(\[(\[(\[(\[([^][]*)\]|[^][]*)\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\])?)\+?=(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|([^][}{();|&[:space:]]*|\"([^"]*|\\.)*\"|'[^']*'|\\.|\$(\{(\{(\{(\{(\{[^{}]*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|([~][=^]?|[=][~^]?|\^[=~]?)?([@*]|[#]|[#]?[a-zA-Z_][a-zA-Z0-9_]*)(\[(\[(\[([^][]*)*\]|[^][]*)*\]|[^][]*)*\])?|([~][=^]?|[=][~^]?|\^[=~]?)?[#]?([0-9]+|[?!$-])))*)?[[:space:]]+)+([[:space:]]*\<(always|builtin|case|command|do|done|elif|else|exec|end|esac|fi|for|foreach|function|if|nocorrect|noglob|repeat|select|then|time|until|while|alias([[:space:]]+[-][gs])?)\>)+"
#VARIABLE assignment
color red "((^|[<>$]\(|[;|&])[[:space:]]*|[{][[:space:]]+)((builtin|do|elif|else|if|(for|foreach)\>([[:space:]]+([A-Za-z_]\>|[A-Za-z_][A-Za-mo-z_0-9]\>|[A-Za-hj-z_][A-Za-z_0-9]\>|[A-Za-z_][A-Za-z_0-9][A-Za-z_0-9]+))+[[:space:]]+(\(([^()]*|\(([^()]*|\(([^()]*)*\))*\))*\))?|nocorrect|noglob|then|((\(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)\)[[:space:]]*|\[\[(\[(\[(\[(\[(\[(\[(\[(\[[^][]*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]\][[:space:]]*)))[[:space:]]+)*((noglob[[:space:]]+)?(local|global|typeset|readonly|integer|float)\>([[:space:]]+-[a-zA-Z]([[:space:]]+[0-9]+)?)*[[:space:]]+)?([A-Za-z_][A-Za-z_0-9]*(\[(\[(\[(\[(\[([^][]*)\]|[^][]*)\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\])?)\+?=(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|([^][}{();|&[:space:]]*|\"([^"]*|\\.)*\"|'[^']*'|\\.|\$(\{(\{(\{(\{(\{[^{}]*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|([~][=^]?|[=][~^]?|\^[=~]?)?([@*]|[#]|[#]?[a-zA-Z_][a-zA-Z0-9_]*)(\[(\[(\[([^][]*)*\]|[^][]*)*\]|[^][]*)*\])?|([~][=^]?|[=][~^]?|\^[=~]?)?[#]?([0-9]+|[?!$-])))*)?([[:space:]]+([A-Za-z_][A-Za-z_0-9]*(\[(\[(\[(\[(\[([^][]*)\]|[^][]*)\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\])?)\+?=(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|([^][}{();|&[:space:]]*|\"([^"]*|\\.)*\"|'[^']*'|\\.|\$(\{(\{(\{(\{(\{[^{}]*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|([~][=^]?|[=][~^]?|\^[=~]?)?([@*]|[#]|[#]?[a-zA-Z_][a-zA-Z0-9_]*)(\[(\[(\[([^][]*)*\]|[^][]*)*\]|[^][]*)*\])?|([~][=^]?|[=][~^]?|\^[=~]?)?[#]?([0-9]+|[?!$-])))*)?)*"
#VARIABLE declarative statement
color red "((^|[<>$]\(|[;|&])[[:space:]]*|[{][[:space:]]+)((if|elif|for|(for|foreach)([[:space:]a-zA-Z0-9_]+\(\)[[:space:]]+))([[:space:]]*(\(\(([^()]*|\([^()]*\))*\)\)|\[\[([^][]*|\[[^][]*\])*\]\])[[:space:]]*)*)?((noglob[[:space:]]+)?(local|global|typeset|readonly|integer|float)\>([[:space:]]+-[a-zA-Z]([[:space:]]+[0-9]+)?)*)([[:space:]]+([A-Za-z_][A-Za-z_0-9]*(\[(\[(\[(\[(\[([^][]*)\]|[^][]*)\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\])?)(\+?=(([^][}{();|&[:space:]]*|\"([^"]*|\\.)*\"|'[^']*'|\\.|\$(\{(\{(\{(\{(\{[^{}]*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|([~][=^]?|[=][~^]?|\^[=~]?)?([@*]|[#]|[#]?[a-zA-Z_][a-zA-Z0-9_]*)(\[(\[(\[([^][]*)*\]|[^][]*)*\]|[^][]*)*\])?|([~][=^]?|[=][~^]?|\^[=~]?)?[#]?([0-9]+|[?!$-])))*)?)?)+"
#VARIABLE value
color brightgreen "\+?=(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|([^][}{();|&[:space:]]*|\"([^"]*|\\.)*\"|'[^']*'|\\.|\$(\{(\{(\{(\{(\{[^{}]*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|([~][=^]?|[=][~^]?|\^[=~]?)?([@*]|[#]|[#]?[a-zA-Z_][a-zA-Z0-9_]*)(\[(\[(\[([^][]*)*\]|[^][]*)*\]|[^][]*)*\])?|([~][=^]?|[=][~^]?|\^[=~]?)?[#]?([0-9]+|[?!$-])))*)?)*"
#FUNCTION definition
color brightgreen "^[[:space:]]*([0-9.:A-Za-z_]+\(\)|function[[:space:]]+([0-9.:A-Za-z_]+(\(\))?[[:space:]]*)*)"
#FOR values
color brightgreen "((^|[<>$]\(|[;|&])[[:space:]]*|[{}][[:space:]]+)((for|foreach)\>([[:space:]]+([A-Za-z_]\>|[A-Za-z_][A-Za-mo-z_0-9]\>|[A-Za-hj-z_][A-Za-z_0-9]\>|[A-Za-z_][A-Za-z_0-9][A-Za-z_0-9]+))+[[:space:]]*(\(([^()]*|\(([^()]*|\(([^()]*|\(([^()]*|\(([^()]*|\(([^()]*)*\))*\))*\))*\))*\))*\))?)"
#FOR name / REPEAT iteration
color red "((^|[<>$]\(|[;|&])[[:space:]]*|[{}][[:space:]]+)((for|foreach)\>([[:space:]]+([A-Za-z_]\>|[A-Za-z_][A-Za-mo-z_0-9]\>|[A-Za-hj-z_][A-Za-z_0-9]\>|[A-Za-z_][A-Za-z_0-9][A-Za-z_0-9]+))+|(repeat\>[[:space:]]+([0-9]+|\$(\{(\{(\{(\{(\{[^{}]*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|([~][=^]?|[=][~^]?|\^[=~]?)?([@*]|[#]|[#]?[a-zA-Z_][a-zA-Z0-9_]*)(\[(\[(\[([^][]*)*\]|[^][]*)*\]|[^][]*)*\])?|([~][=^]?|[=][~^]?|\^[=~]?)?[#]?([0-9]+|[?!$-])))+))"
#CONDITION/MATH
color brightgreen "(((^|[<>$]\([[:space:]]|[;|&])[[:space:]]*|[{}][[:space:]]+)((!|elif|if|for|while|until)[[:space:]]+)?)(\(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)\)[[:space:]]*|\[\[(\[(\[(\[(\[(\[(\[(\[(\[[^][]*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]\][[:space:]]*)+"
#COMMAND substitution
#color brightgreen "(`[^`]*`|$\((\((\((|[^()]*)*\)|[^()]*)*\)|[^()]*)*\))"
color brightgreen "(`[^`]*`|[<>$]\(|\))"
#VARIABLE declarative word
color brightblue "((^|[<>$]\(|[;|&)])[[:space:]]*|[{}][[:space:]]+)((noglob[[:space:]]+)?(local|global|typeset|readonly|integer|float)\>([[:space:]]+-[a-zA-Z]([[:space:]]+[0-9]+)?)*)"
#CONTROL/PRECOMMAND word
color green "((^|[<>$]\(|[;|&])[[:space:]]*|[{}][[:space:]]+)(![[:space:]]+)?([[:space:]]*\<(always|builtin|case|command|do|done|elif|else|exec|end|esac|fi|for|foreach|function|if|nocorrect|noglob|repeat|select|then|time|until|while|alias([[:space:]]+[-][gs])?)\>)+"
#BRACKETS/SYMBOLS :1:
color green "([][{}()$<>=;|&!\`]|[+][=]|[=][~][[:space:]])"
#color green "\[\[([[:space:]]+|[^][]*|\[[^][]*\])+\]\]|\[([[:space:]]+|[^][]*|\[[^][]*\])+\]"
#DOUBLE-QUOTE string
color brightyellow ""(\\.|[^"])*"" """
#COMMENT/HIDDEN
color cyan "(^[[:space:]]*|[<>$]\(|[;|&][[:space:]]+)#.*$"
#BRACKETS/SYMBOLS :2:
color green "([;|&]|\$\()"
#VARIABLE expansion
icolor brightred "\$(\{(\{(\{(\{(\{[^{}]*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|[^{}]*)*\}|([~][=^]?|[=][~^]?|\^[=~]?)?([@*]|[#]|[#]?[a-zA-Z_][a-zA-Z0-9_]*)(\[(\[(\[([^][]*)*\]|[^][]*)*\]|[^][]*)*\])?|([~][=^]?|[=][~^]?|\^[=~]?)?[#]?([0-9]+|[?!$-]))"
#MATH expansion
color red "(\$)\(\((\((\((\((\((\((\((\((\([^()]*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)|[^()]*)*\)\)"
icolor red "(\$)\[(\[(\[(\[(\[(\[(\[(\[(\[[^][]*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]|[^][]*)*\]"
#SINGLE-QUOTE string
color brightyellow "\$?'(\\.|[^'])*'" "'"
#TRAILING-SPACE
color ,green "[[:space:]]+$"
#BACK-QUOTE
color yellow "\\."































